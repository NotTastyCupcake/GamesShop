@model GamesShop.Models.Store.Game

@{
    ViewData["Title"] = "Edit";
}

<h1>Изменение</h1>

<h4>Игра</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdDeveloper" class="control-label"></label>
                <select asp-for="IdDeveloper" class="form-control" asp-items="ViewBag.IdDeveloper"></select>
                <span asp-validation-for="IdDeveloper" class="text-danger"></span>
            </div>
            @{
                List<GamesShop.Models.Store.SroreViewModel.AssignedGenreData> genres = ViewBag.Genres;
                foreach(var genre in genres)
                {
                    @:
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" name="selectedGenres" id="inlineCheckbox1" value="@genre.IdGenre" 
                        @(Html.Raw(genre.Assigned ? "checked=\"checked\"" : "")) />
                        @genre.Name
                    </div>
                }

            }
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Назад в список</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
